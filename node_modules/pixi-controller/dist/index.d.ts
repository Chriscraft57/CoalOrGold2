declare class Mouse {
    private canvasElement;
    private posLocalY;
    private posLocalX;
    private posGlobalX;
    private posGlobalY;
    private buttonStates;
    private events;
    private _prevent;
    private mouseMoveListener;
    private mouseDownListener;
    private mouseUpListener;
    private mouseMenuContext;
    constructor(canvas: HTMLCanvasElement);
    getMousePos(event: any): {
        x: number;
        y: number;
    };
    getPosGlobalX(): number;
    getPosGlobalY(): number;
    getPosLocalX(): number;
    getPosLocalY(): number;
    getPosX(): number;
    getPosY(): number;
    clear(): void;
    reset(_canvas?: HTMLCanvasElement): void;
    update(): void;
    isButtonDown(...args: Array<any>): boolean;
    isButtonUp(...args: Array<any>): boolean;
    isButtonPressed(...args: Array<any>): boolean;
    isButtonReleased(...args: Array<any>): boolean;
    prevent(...args: Array<number>): void;
    preventRemove(): void;
    private preventMiddle;
}

declare class Keyboard {
    private keyStates;
    private events;
    private keyDownListener;
    private keyUpListener;
    constructor();
    clear(): void;
    update(): void;
    isKeyDown(...args: Array<any>): boolean;
    isKeyUp(...args: Array<any>): boolean;
    isKeyPressed(...args: Array<any>): boolean;
    isKeyReleased(...args: Array<any>): boolean;
    private set;
    reset(): void;
}

declare class PIXIController {
    private Canvas;
    Mouse: Mouse;
    Keyboard: Keyboard;
    constructor(canvas?: HTMLCanvasElement);
    update(): void;
    reset(): void;
    setContext(_canvas: HTMLCanvasElement): void;
    getContext(): HTMLCanvasElement;
    prevent(): void;
}

interface MouseButton {
    LEFT: number;
    MIDDLE: number;
    RIGHT: number;
    FOURTH: number;
    FIFTH: number;
}
interface PlayerKeyboard {
    UP: Array<string>;
    DOWN: Array<string>;
    LEFT: Array<string>;
    RIGHT: Array<string>;
    INVENTORY: Array<string>;
    BAR: Array<string>;
}

declare const BUTTON: MouseButton;
declare const PLAYER: PlayerKeyboard;

export { BUTTON, Keyboard, MouseButton, PIXIController, PLAYER, PlayerKeyboard };
